
Shortest Unsorted Continuous Subarray


class Solution {
public:
int findUnsortedSubarray(vector<int>& nums) {
	   int leastSoFar = INT_MAX, left = 0, right = 0;
        int n = nums.size();
	   for(int i = n - 1; i >= 0; i--){
	       leastSoFar = min(leastSoFar, nums[i]);
	       if(leastSoFar != nums[i]){
	           left = i;
	       }
	   }
	   int maxSoFar = INT_MIN;
	   for(int i = 0; i < n; i++){
	       maxSoFar = max(maxSoFar, nums[i]);
	       if(maxSoFar != nums[i]){
	           right = i;
	       }
	   }
	   return right == left ? 0 : right - left + 1;
    }
};
